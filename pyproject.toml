[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "plex-oms-service"
version = "0.1.0"
description = "A privacy-first web application for managing Plex Online Media Sources with OAuth authentication and GDPR compliance"
readme = "README.md"
license = "AGPL-3.0-or-later"
authors = [
    {name = "CCCP-PS", email = "213192498+cccp-ps@users.noreply.github.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
]
keywords = ["plex", "media", "oauth", "privacy", "fastapi"]
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.115.12",
    "uvicorn[standard]>=0.34.2",
    "pydantic>=2.11.5",
    "pydantic-settings>=2.9.1",
    "PlexAPI>=4.17.0",
    "httpx>=0.28.1",
    "python-multipart>=0.0.20",
    "slowapi>=0.1.9",
    "python-jose[cryptography]>=3.4.0",
    "passlib[bcrypt]>=1.7.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
    "basedpyright>=1.29.2",
    "ruff>=0.1.8",
]

[project.urls]
Homepage = "https://github.com/cccp-ps/plex-oms-service"
Repository = "https://github.com/cccp-ps/plex-oms-service.git"
Issues = "https://github.com/cccp-ps/plex-oms-service/issues"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "S",    # flake8-bandit (security)
    "C4",   # flake8-comprehensions
]
ignore = [
    "S101",   # use of assert detected (ok in tests)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101", "S106"]  # Allow asserts and hardcoded passwords in tests

[tool.basedpyright]
pythonVersion = "3.13"
typeCheckingMode = "recommended"
include = ["app", "tests"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
branch = true 